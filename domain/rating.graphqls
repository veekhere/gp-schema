type Rating {
  id: UUID!
  # Цена аренды.
  price: Int
  # Тип аренды.
  rentType: RentType!
  # Преимущества.
  pros: String!
  # Недостатки.
  cons: String!
  # Комментарий.
  comment: String
  # Оценка помещения.
  placeRating: Int!
  # Оценка арендодателя.
  landlordRating: Int!
  # Оценка соседей.
  neighborRating: Int
  # Помещение.
  place: CommonProjection
  # Создано.
  createdAt: DateTime!
}

input RatingInput {
  id: UUID!
  placeId: UUID!
  # Цена аренды.
  price: Int
  # Тип аренды.
  rentType: RentType!
  # Преимущества.
  pros: String!
  # Недостатки.
  cons: String!
  # Комментарий.
  comment: String
  # Оценка помещения.
  placeRating: Int!
  # Оценка арендодателя.
  landlordRating: Int!
  # Оценка соседей.
  neighborRating: Int
}

extend type Query {
  searchRatings: [Rating]
}

extend type Mutation {
  ratePlace(rating: RatingInput!): OperationResult!
}
